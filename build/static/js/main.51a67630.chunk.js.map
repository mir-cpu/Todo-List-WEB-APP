{"version":3,"sources":["firebase.js","Todo.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","Todo","props","List","ListItem","ListItemAvatar","classname","onClick","event","collection","doc","todo","id","delete","ListItemText","className","primary","task","secondary","App","useState","todos","setTodos","input","setInput","useEffect","orderBy","onSnapshot","snapshot","docs","map","data","console","log","FormControl","InputLabel","Input","value","onChange","e","target","Button","type","disabled","variant","color","preventDefault","add","timestamp","FieldValue","serverTimestamp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAaeA,EAXGC,IAASC,cAAc,CACrCC,OAAQ,0CACVC,WAAY,gCACZC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,cACnBC,MAAO,2CACPC,cAAe,iBAGMC,Y,uBCURC,MAdf,SAAcC,GACV,OACI,cAACC,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACA,cAACC,EAAA,EAAD,IAEA,cAAC,IAAD,CAAmBC,UAAU,MAAMC,QAAS,SAAAC,GAAUlB,EAAGmB,WAAW,SAASC,IAAIR,EAAMS,KAAKC,IAAIC,UAAhG,6BAEA,cAACC,EAAA,EAAD,CAAcC,UAAU,OAAOC,QAASd,EAAMS,KAAKM,KAAMC,UAAU,2B,sCCuChEC,MA9Cf,WAAgB,IAAD,EACYC,mBAAS,IADrB,mBACNC,EADM,KACCC,EADD,OAEWF,mBAAS,IAFpB,mBAEPG,EAFO,KAECC,EAFD,KAoBb,OAhBDC,qBAAU,WACPnC,EAAGmB,WAAW,SAASiB,QAAQ,YAAY,QAAQC,YAAW,SAAAC,GAC5DN,EAASM,EAASC,KAAKC,KAAI,SAAApB,GAAG,MAAK,CAACE,GAAIF,EAAIE,GAAGK,KAAKP,EAAIqB,OAAOd,UAC/De,QAAQC,WAEX,IAaC,sBAAKlB,UAAU,MAAf,UACE,0CAEA,uBAAMA,UAAU,MAAhB,UACE,eAACmB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,kCACA,cAACC,EAAA,EAAD,CAAOC,MAAOd,EAAOe,SAAU,SAAAC,GAAC,OAAIf,EAASe,EAAEC,OAAOH,aAExD,cAACI,EAAA,EAAD,CAAQC,KAAK,SAASC,UAAWpB,EAAMqB,QAAQ,YAAYC,MAAM,UAAStC,QAnBnE,SAACgC,GACbA,EAAEO,iBACFxD,EAAGmB,WAAW,SAASsC,IAAI,CACzB9B,KAAKM,EACLyB,UAAWzD,IAASS,UAAUiD,WAAWC,oBAE3C1B,EAAS,KAaJ,yBAKF,oBAAIT,UAAU,OAAd,SACGM,EAAMS,KAAI,SAAAnB,GAAI,OACb,cAAC,EAAD,CAAMA,KAAMA,aClCPwC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.51a67630.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst firebaseApp=firebase.initializeApp({\r\n    apiKey: \"AIzaSyBKIj0Sw_cyf-L_DGR-QDjSmFiewzWcXoQ\",\r\n  authDomain: \"todoapp-f943e.firebaseapp.com\",\r\n  projectId: \"todoapp-f943e\",\r\n  storageBucket: \"todoapp-f943e.appspot.com\",\r\n  messagingSenderId: \"79873320102\",\r\n  appId: \"1:79873320102:web:d77344b0a31a8a50dd8067\",\r\n  measurementId: \"G-8KWHJK4PMY\"\r\n});\r\n\r\nconst db = firebaseApp.firestore();\r\nexport default db","import React from 'react';\r\nimport {List,ListItem,ListItemText,ListItemAvatar} from '@material-ui/core';\r\nimport db from './firebase';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport './todoStyling.css';\r\n\r\n\r\n\r\nfunction Todo(props) {\r\n    return (\r\n        <List>\r\n            <ListItem>\r\n            <ListItemAvatar>\r\n            </ListItemAvatar>\r\n            <DeleteForeverIcon classname=\"del\" onClick={event => {db.collection('todos').doc(props.todo.id).delete()} } >❌Delete Me</DeleteForeverIcon>\r\n        \r\n            <ListItemText className=\"text\" primary={props.todo.task} secondary=\"Time Limit⏰\" />\r\n            </ListItem>\r\n        </List>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","// eslint-disable-next-line\nimport React, { useState, useEffect } from \"react\";\nimport Todo from \"./Todo.js\";\nimport { Button , FormControl , Input , InputLabel  } from '@material-ui/core';\nimport db from \"./firebase\";\nimport firebase from \"firebase\";\nimport './App.css';\n\n\nfunction App() {\n  const [todos, setTodos]= useState([]);\n const [input , setInput]=useState('');\n//when the app.js loads we need to get the todos from our database \n useEffect(() => {\n    db.collection('todos').orderBy('timestamp','desc').onSnapshot(snapshot => {\n      setTodos(snapshot.docs.map(doc => ({id: doc.id,task:doc.data().task})));\n      console.log();\n    })\n },[])\n\n const addTodo=(e) => {\n   e.preventDefault();\n   db.collection('todos').add({\n     task:input,\n     timestamp: firebase.firestore.FieldValue.serverTimestamp()\n   })\n   setInput('');\n   \n }\n  return (\n   \n    <div className=\"App\">\n      <h1>Todo-App</h1>\n      \n      <form className=\"fin\">\n        <FormControl>\n          <InputLabel>✅:Write a todo</InputLabel>\n          <Input value={input} onChange={e => setInput(e.target.value)} />\n        </FormControl>\n        <Button type=\"submit\" disabled={!input}variant=\"contained\" color=\"primary\"onClick={addTodo}>\n          Add Todo\n        </Button>\n      </form>\n    \n      <ul className='text'>\n        {todos.map(todo => (\n          <Todo todo={todo}/>\n        ))}\n        \n      </ul>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}